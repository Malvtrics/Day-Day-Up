-- CREATE PROCEDURE GP_REF_IMP_CIF.sql
-- ----------------------------------------------------------------------------
-- Module             : ALPIN - GPMA
-- Database           : ALPIN
-- Target environment : ALL
-- Description        : Create procedure of GP_REF_IMP_CIF 
-- Language           : T-SQL
-- ----------------------------------------------------------------------------
-- Revision History
-- When       Who What
-- ---------- --- -------------------------------------------------------------
-- 12/16/2016 Tony Creation
-- 06/16/2017 RZ Update
-- ----------------------------------------------------------------------------

IF EXISTS ( SELECT  *
            FROM    sys.objects
            WHERE   object_id = OBJECT_ID(N'[dbo].[GP_REF_IMP_CIF]')
                    AND type IN ( N'P', N'PC' ) )
    DROP PROCEDURE [dbo].[GP_REF_IMP_CIF]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GP_REF_IMP_CIF]
AS
    INSERT  INTO dbo.GP_RF_SUPPLIER
            ( SYSTEM_SOURCE ,
              SUPPLIER_CODE ,
              SUPPLIER_DESC ,
              SUPPLIER_STATUS ,
              SUPPLIER_CREATIONDATE ,
              SUPPLIER_UPDATEDATE ,
              SUPPLIER_CREATIONUSER ,
              SUPPLIER_UPDATEUSER ,
              SUPPLIER_IMP_CREATIONDATE ,
              SUPPLIER_IMP_UPDATEDATE ,
              SUPPLIER_IMP_CREATIONUSER ,
              SUPPLIER_IMP_UPDATEUSER ,
              SUPPLIER_CALCULATED_STATUS ,
              SUPPLIER_FINAL_STATUS
			)
            SELECT DISTINCT
                    'NOKIA_ACL' SYSTEM_SOURCE ,
                    'NOK0000000' ,
                    ENTERPRISE_ID SUPPLIER_DESC ,
                    'A' ,
                    GETDATE() ,
                    GETDATE() ,
                    'CIF_ENTERPRISE_ID' ,
                    'CIF_ENTERPRISE_ID' ,
                    GETDATE() ,
                    GETDATE() ,
                    'CIF_ENTERPRISE_ID' ,
                    'CIF_ENTERPRISE_ID' ,
                    1 ,
                    1
            FROM    dbo.CIF_ENTERPRISE_ID
                    LEFT JOIN dbo.GP_RF_SUPPLIER N ON N.SYSTEM_SOURCE = 'NOKIA_ACL'
                                                      AND ENTERPRISE_ID = N.SUPPLIER_DESC
            WHERE   N.ID IS NULL
            GROUP BY ENTERPRISE_ID



    UPDATE  S1
    SET     SUPPLIER_CODE = S2.SUPPLIER_CODE
    FROM    dbo.GP_RF_SUPPLIER S1
            INNER JOIN dbo.GP_RF_SUPPLIER S2 ON S1.SUPPLIER_CODE = 'NOK0000000'
                                                AND S1.SYSTEM_SOURCE = 'NOKIA_ACL'
                                                AND S2.SYSTEM_SOURCE = 'ALSR'
                                                AND S2.SUPPLIER_FINAL_STATUS = 1
                                                AND S1.SUPPLIER_DESC = S2.SUPPLIER_DESC




    UPDATE  dbo.GP_RF_SUPPLIER
    SET     SUPPLIER_CODE = COMPANY_SGN_CODE ,
            SUPPLIER_ASK = COMPANY_SGN_CODE
    FROM    dbo.GP_RF_SUPPLIER
            INNER JOIN dbo.GPM_SGN_LOOKUP ON SYSTEM_SOURCE = 'NOKIA_ACL'
                                             AND SUPPLIER_CODE = 'NOK0000000'
                                             AND SUPPLIER_DESC = COMPANY_SGN_NAME
                                             AND COMPANY_SGN_CODE <> '9999999'
                                             AND NOT EXISTS ( SELECT
                                                              ID
                                                              FROM
                                                              GP_RF_SUPPLIER
                                                              WHERE
                                                              SYSTEM_SOURCE = 'NOKIA_ACL'
                                                              AND SUPPLIER_CODE = COMPANY_SGN_CODE )
	 
    UPDATE  dbo.GP_RF_SUPPLIER
    SET     SUPPLIER_CODE = COMPANY_CODE ,
            SUPPLIER_ASK = COMPANY_CODE
    FROM    dbo.GP_RF_SUPPLIER
            INNER JOIN dbo.GPM_SGN_LOOKUP ON SYSTEM_SOURCE = 'NOKIA_ACL'
                                             AND SUPPLIER_CODE = 'NOK0000000'
                                             AND SUPPLIER_DESC = COMPANY_NAME
                                             AND COMPANY_CODE <> '1111111'
                                             AND NOT EXISTS ( SELECT
                                                              ID
                                                              FROM
                                                              GP_RF_SUPPLIER
                                                              WHERE
                                                              SYSTEM_SOURCE = 'NOKIA_ACL'
                                                              AND SUPPLIER_CODE = COMPANY_CODE )



    UPDATE  dbo.GP_RF_SUPPLIER
    SET     SUPPLIER_CODE = A.SUPPLIER_ID ,
            SUPPLIER_ASK = A.SUPPLIER_ID
    FROM    dbo.GP_RF_SUPPLIER S
            INNER JOIN ( SELECT SUPPLIER_ID ,
                                ENTERPRISE_ID ,
                                ROW_NUMBER() OVER ( PARTITION BY ENTERPRISE_ID ORDER BY LOCATION ) AS OrderID
                         FROM   CIF_ENTERPRISE_ID_MAP
                         WHERE  ISNUMERIC(SUPPLIER_ID) = 1
                                AND LEN(SUPPLIER_ID) = 7
                       ) A ON S.SYSTEM_SOURCE = 'NOKIA_ACL'
                              AND S.SUPPLIER_CODE = 'NOK0000000'
                              AND S.SUPPLIER_DESC = A.ENTERPRISE_ID
                              AND A.OrderID = 1 
	  

    --UPDATE  dbo.GP_RF_SUPPLIER
    --SET     SUPPLIER_CODE = B.SUPPLIER_CODE
    --FROM    dbo.GP_RF_SUPPLIER
    --        INNER JOIN ( SELECT SUPPLIER_CODE ,
    --                            SUPPLIER_DESC
    --                     FROM   ( SELECT    SUPPLIER_CODE ,
    --                                        SUPPLIER_DESC ,
    --                                        ROW_NUMBER() OVER ( PARTITION BY SUPPLIER_DESC ORDER BY SUPPLIER_FINAL_STATUS DESC, SUPPLIER_IMP_UPDATEDATE DESC ) orderid
    --                              FROM      GP_RF_SUPPLIER
    --                              WHERE     SYSTEM_SOURCE <> 'NOKIA_ACL' AND LEN(SUPPLIER_CODE)=7
    --                            ) A
    --                     WHERE  orderid = 1
    --                   ) B ON dbo.GP_RF_SUPPLIER.SYSTEM_SOURCE = 'NOKIA_ACL'
    --                          AND dbo.GP_RF_SUPPLIER.SUPPLIER_CODE = 'NOK0000000'
    --                          AND dbo.GP_RF_SUPPLIER.SUPPLIER_DESC = B.SUPPLIER_DESC
				--			  AND B.SUPPLIER_CODE NOT IN (SELECT SUPPLIER_CODE FROM GP_RF_SUPPLIER WHERE SYSTEM_SOURCE='NOKIA_ACL')



    UPDATE  dbo.GP_RF_SUPPLIER
    SET     SUPPLIER_CODE = 'NOK0000000'
    WHERE   SYSTEM_SOURCE = 'NOKIA_ACL'
            AND SUPPLIER_CODE IN ( SELECT   SUPPLIER_CODE
                                   FROM     dbo.GP_RF_SUPPLIER
                                   WHERE    SYSTEM_SOURCE = 'NOKIA_ACL'
                                   GROUP BY SUPPLIER_CODE
                                   HAVING   COUNT(DISTINCT SUPPLIER_DESC) > 1 )
            AND SUPPLIER_DESC NOT IN (
            SELECT  SUPPLIER_DESC
            FROM    ( SELECT    M.SUPPLIER_DESC ,
                                ROW_NUMBER() OVER ( PARTITION BY M.SUPPLIER_CODE ORDER BY S.ID_COUNT DESC ) AS OrderID
                      FROM      GP_RF_SUPPLIER M
                                INNER JOIN ( SELECT SUPPLIER_DESC ,
                                                    COUNT(*) AS ID_COUNT
                                             FROM   dbo.GP_RF_SUPPLIER
                                             WHERE  SYSTEM_SOURCE = 'NOKIA_ACL'
                                             GROUP BY SUPPLIER_DESC
                                           ) S ON M.SUPPLIER_DESC = S.SUPPLIER_DESC
                                                  AND M.SYSTEM_SOURCE = 'NOKIA_ACL'
                    ) IDC
            WHERE   OrderID = 1 )






    DECLARE @maxCode AS INT

    SELECT  @maxCode = RIGHT(ISNULL(MAX(SUPPLIER_CODE), 'NOK0000000'), 7)
    FROM    GP_RF_SUPPLIER
    WHERE   SYSTEM_SOURCE = 'NOKIA_ACL'
            AND SUPPLIER_CODE LIKE 'NOK%'
            AND LEN(SUPPLIER_CODE) = 10
            AND ISNUMERIC(RIGHT(SUPPLIER_CODE, 7)) = 1 

    UPDATE  dbo.GP_RF_SUPPLIER
    SET     SUPPLIER_CODE = LEFT('NOK000000', 10 - LEN(ORDER_ID)) + ORDER_ID
    FROM    dbo.GP_RF_SUPPLIER
            INNER JOIN ( SELECT SUPPLIER_DESC ,
                                CAST(ROW_NUMBER() OVER ( ORDER BY SUPPLIER_DESC )
                                + @maxCode AS VARCHAR(7)) ORDER_ID
                         FROM   dbo.GP_RF_SUPPLIER
                         WHERE  SYSTEM_SOURCE = 'NOKIA_ACL'
                                AND SUPPLIER_CODE = 'NOK0000000'
                       ) orderTable ON SYSTEM_SOURCE = 'NOKIA_ACL'
                                       AND SUPPLIER_CODE = 'NOK0000000'
                                       AND dbo.GP_RF_SUPPLIER.SUPPLIER_DESC = orderTable.SUPPLIER_DESC
    OPTION  ( HASH JOIN )


    UPDATE  GP_RF_SUPPLIER
    SET     SUPPLIER_ASK = SUPPLIER_CODE
    WHERE   SYSTEM_SOURCE = 'NOKIA_ACL'

	-- GP_RF_PART
    INSERT  INTO dbo.GP_RF_PART
            ( PART_NUMBER ,
              PART_DESC ,
              SYSTEM_SOURCE ,
              COMMODITY_CODE ,
              UOM_CODE ,
              PART_STATUS ,
              PART_FINAL_STATUS ,
              PART_CALCULATED_STATUS ,
              PART_CREATIONDATE ,
              PART_CREATIONUSER ,
              PART_UPDATEDATE ,
              PART_UPDATEUSER ,
              PART_IMP_CREATIONDATE ,
              PART_IMP_CREATIONUSER ,
              PART_IMP_UPDATEDATE ,
              PART_IMP_UPDATEUSER
            )
            SELECT  NSN_CODE AS PART_NUMBER ,
                    [DESCRIPTION] AS PART_DESC ,
                    'NOKIA_ACL' AS SYSTEM_SOURCE ,
                    CASE WHEN ISNUMERIC(COMMCODE) = 0 THEN SUB_ID
                         ELSE COMMCODE
                    END AS COMMODITY_CODE ,
                    CASE WHEN ISNULL(UNIT_OF_MEASURE, 'PC') = 'PC' THEN 'PCS'
                         ELSE UNIT_OF_MEASURE
                    END AS UOM_CODE ,
                    'A' AS PART_STATUS ,
                    1 AS PART_FINAL_STATUS ,
                    1 AS PART_CALCULATED_STATUS ,
                    GETDATE() AS PART_CREATIONDATE ,
                    'ENOVIA_ALL_PARTS' AS PART_CREATIONUSER ,
                    GETDATE() AS PART_UPDATEDATE ,
                    'ENOVIA_ALL_PARTS' AS PART_UPDATEUSER ,
                    GETDATE() AS PART_IMP_CREATIONDATE ,
                    'ENOVIA_ALL_PARTS' AS PART_IMP_CREATIONUSER ,
                    GETDATE() AS PART_IMP_UPDATEDATE ,
                    'ENOVIA_ALL_PARTS' AS PART_IMP_UPDATEUSER
            FROM    ENOVIA_ALL_PARTS
                    LEFT JOIN GP_RF_PART ON SYSTEM_SOURCE = 'NOKIA_ACL'
                                            AND NSN_CODE = PART_NUMBER
            WHERE   PART_LIFECYCLE IN ( 'Release', 'Implement', 'Verify',
                                        'Ramp Up' )
                    AND PART_NUMBER IS NULL

    INSERT  INTO dbo.GP_RF_PART
            ( SYSTEM_SOURCE ,
              PART_NUMBER ,
              COMMODITY_CODE ,
              PART_DESC ,
              PART_STATUS ,
              PART_CREATIONDATE ,
              PART_UPDATEDATE ,
              PART_CREATIONUSER ,
              PART_UPDATEUSER ,
              PART_IMP_CREATIONDATE ,
              PART_IMP_UPDATEDATE ,
              PART_IMP_CREATIONUSER ,
              PART_IMP_UPDATEUSER ,
              PART_CALCULATED_STATUS ,
              PART_FINAL_STATUS
			)
            SELECT DISTINCT
                    'NOKIA_ACL' ,
                    ITEM_ID ,
                    INIT_SUB_ID ,
                    MAX(LEFT(DESCRIPTION, 100)) ,
                    'A' ,
                    GETDATE() ,
                    GETDATE() ,
                    'CIF_ITEM_ID' ,
                    'CIF_ITEM_ID' ,
                    GETDATE() ,
                    GETDATE() ,
                    'CIF_ITEM_ID' ,
                    'CIF_ITEM_ID' ,
                    1 ,
                    1
            FROM    dbo.CIF_ITEM_ID
                    LEFT JOIN dbo.GP_RF_PART N ON N.SYSTEM_SOURCE = 'NOKIA_ACL'
                                                  AND ITEM_ID = N.PART_NUMBER
            WHERE   N.PART_NUMBER IS NULL
                    AND LEN(ITEM_ID) <= 30
            GROUP BY ITEM_ID ,
                    INIT_SUB_ID


    UPDATE  dbo.GP_RF_PART
    SET     PART_DESC = LEFT(DESCRIPTION, 100) ,
            COMMODITY_CODE = ( CASE WHEN ISNUMERIC(COMMCODE) = 0 THEN SUB_ID
                                    ELSE COMMCODE
                               END )
    FROM    dbo.GP_RF_PART
            INNER JOIN dbo.ENOVIA_ALL_PARTS ON SYSTEM_SOURCE = 'NOKIA_ACL'
                                               AND NSN_CODE = PART_NUMBER
                                               AND PART_LIFECYCLE IN (
                                               'Release', 'Implement',
                                               'Verify', 'Ramp Up' )
    OPTION  ( HASH JOIN )
	

    UPDATE  GP_RF_PART
    SET     UOM_CODE = 'PCS'
    WHERE   ISNULL(UOM_CODE, '') IN ( '', 'PC', 'PCE' )
            AND SYSTEM_SOURCE = 'NOKIA_ACL'

	-- GP_RF_CIF_MANUF

    DELETE  FROM ENOVIA_ALL_MEPS
    WHERE   NSN_CODE + ENTERPRISE_ID + MANUFACTURER + MEP_ORDER_CODE IS NULL

    DELETE  FROM CIF_ITEM_ID_MEP
    WHERE   ITEM_ID + ENTERPRISE_ID + MANUFACTURER + MANUF_PART_CODE IS NULL

    INSERT  INTO ENOVIA_ALL_MEPS
            ( [TYPE] ,
              NSN_CODE ,
              MEP_ID ,
              MANUFACTURER ,
              ENTERPRISE_ID ,
              MEP_LIFECYCLE ,
              MEP_ORDER_CODE ,
              LAST_ORDER_DATE ,
              ORIGINATED ,
              LAST_UPDATE
            )
            SELECT  'MODIAS' AS [TYPE] ,
                    ITEM_ID AS NSN_CODE ,
                    MANUF_PART_ID AS MEP_ID ,
                    MANUFACTURER ,
                    ENTERPRISE_ID ,
                    MEP_LIFECYCLE ,
                    MANUF_PART_CODE AS MEP_ORDER_CODE ,
                    LAST_ORDER_DATE ,
                    NULL AS ORIGINATED ,
                    GETDATE() AS LAST_UPDATE
            FROM    dbo.CIF_ITEM_ID_MEP
            WHERE   ITEM_ID NOT IN ( SELECT NSN_CODE
                                     FROM   ENOVIA_ALL_MEPS )


    DELETE  M
    FROM    dbo.GP_RF_CIF_MANUF M
    WHERE   NOT EXISTS ( SELECT 1
                         FROM   dbo.ENOVIA_ALL_MEPS I
                         WHERE  I.MEP_LIFECYCLE NOT IN ( 'Obsolete',
                                                         'Disqualified' )
                                AND I.ENTERPRISE_ID = M.ENTERPRISE_ID
                                AND I.NSN_CODE = M.GLOBAL_PART_NUMBER
                                AND I.MANUFACTURER = M.MANUFACTURER_NAME
                                AND I.MEP_ORDER_CODE = M.MANUFACTURER_PART_NUMBER )
            AND REMARK IS NULL


    UPDATE  M
    SET     MANUFACTURER_STATUS = I.MEP_LIFECYCLE ,
            LAST_ORDER_DATE = CONVERT(NVARCHAR(10), I.LAST_ORDER_DATE, 101) ,
            LAST_REFRESH = I.LAST_UPDATE
    FROM    dbo.GP_RF_CIF_MANUF M
            INNER JOIN ENOVIA_ALL_MEPS I ON I.MEP_LIFECYCLE NOT IN (
                                            'Obsolete', 'Disqualified' )
                                            AND I.ENTERPRISE_ID = M.ENTERPRISE_ID
                                            AND I.NSN_CODE = M.GLOBAL_PART_NUMBER
                                            AND I.MANUFACTURER = M.MANUFACTURER_NAME
                                            AND I.MEP_ORDER_CODE = M.MANUFACTURER_PART_NUMBER

	
    INSERT  INTO dbo.GP_RF_CIF_MANUF
            ( GLOBAL_PART_NUMBER ,
              ENTERPRISE_ID ,
              MANUFACTURER_CODE ,
              MANUFACTURER_NAME ,
              MANUFACTURER_PART_NUMBER ,
              MANUFACTURER_STATUS ,
              LAST_ORDER_DATE ,
              LAST_REFRESH
            )
            SELECT  NSN_CODE AS GLOBAL_PART_NUMBER ,
                    I.ENTERPRISE_ID ,
                    ISNULL(MAP.MANUFACTURER_CODE, 'NOK0000000') AS MANUFACTURER_CODE ,
                    MANUFACTURER AS MANUFACTURER_NAME ,
                    MEP_ORDER_CODE AS MANUFACTURER_PART_NUMBER ,
                    MEP_LIFECYCLE AS MANUFACTURER_STATUS ,
                    I.LAST_ORDER_DATE ,
                    I.LAST_UPDATE
            FROM    ENOVIA_ALL_MEPS I
                    LEFT JOIN CIF_MANUF_CODE_MAP MAP ON I.MANUFACTURER = MAP.MANUFACTURER_NAME
                    LEFT JOIN dbo.GP_RF_CIF_MANUF M ON I.ENTERPRISE_ID = M.ENTERPRISE_ID
                                                       AND I.NSN_CODE = M.GLOBAL_PART_NUMBER
                                                       AND I.MANUFACTURER = M.MANUFACTURER_NAME
                                                       AND I.MEP_ORDER_CODE = M.MANUFACTURER_PART_NUMBER
            WHERE   I.MEP_LIFECYCLE NOT IN ( 'Obsolete', 'Disqualified' )
                    AND M.ID IS NULL
	

    INSERT  INTO CIF_MANUF_CODE_MAP
            ( MANUFACTURER_NAME ,
              MANUFACTURER_CODE
            )
            SELECT DISTINCT
                    MANUFACTURER_NAME ,
                    MANUFACTURER_CODE
            FROM    GP_RF_CIF_MANUF
            WHERE   MANUFACTURER_CODE = 'NOK0000000'
                    AND ISNULL(MANUFACTURER_NAME, '') NOT IN (
                    SELECT  MANUFACTURER_NAME
                    FROM    CIF_MANUF_CODE_MAP )


    UPDATE  dbo.CIF_MANUF_CODE_MAP
    SET     MANUFACTURER_CODE = M.MANUFACTURER_CODE
    FROM    dbo.CIF_MANUF_CODE_MAP C
            INNER JOIN dbo.GP_RF_MANUFACTURER M ON C.MANUFACTURER_CODE = 'NOK0000000'
                                                   AND M.SYSTEM_SOURCE = 'ALSR'
                                                   AND M.MANUFACTURER_FINAL_STATUS = 1
                                                   AND C.MANUFACTURER_NAME = M.MANUFACTURER_DESC


	
    UPDATE  dbo.CIF_MANUF_CODE_MAP
    SET     MANUFACTURER_CODE = COMPANY_SGN_CODE
    FROM    dbo.CIF_MANUF_CODE_MAP
            INNER JOIN dbo.GPM_SGN_LOOKUP ON MANUFACTURER_CODE = 'NOK0000000'
                                             AND MANUFACTURER_NAME = COMPANY_SGN_NAME
                                             AND COMPANY_SGN_CODE <> '9999999'
                                             AND NOT EXISTS ( SELECT
                                                              ID
                                                              FROM
                                                              CIF_MANUF_CODE_MAP
                                                              WHERE
                                                              MANUFACTURER_CODE = COMPANY_SGN_CODE )
	

	
    UPDATE  dbo.CIF_MANUF_CODE_MAP
    SET     MANUFACTURER_CODE = COMPANY_CODE
    FROM    dbo.CIF_MANUF_CODE_MAP
            INNER JOIN dbo.GPM_SGN_LOOKUP ON MANUFACTURER_CODE = 'NOK0000000'
                                             AND MANUFACTURER_NAME = COMPANY_NAME
                                             AND COMPANY_CODE <> '1111111'
                                             AND NOT EXISTS ( SELECT
                                                              ID
                                                              FROM
                                                              CIF_MANUF_CODE_MAP
                                                              WHERE
                                                              MANUFACTURER_CODE = COMPANY_CODE )


    UPDATE  dbo.CIF_MANUF_CODE_MAP
    SET     MANUFACTURER_CODE = 'NOK0000000'
    WHERE   MANUFACTURER_CODE IN (
            SELECT  MANUFACTURER_CODE
            FROM    dbo.CIF_MANUF_CODE_MAP
            GROUP BY MANUFACTURER_CODE
            HAVING  COUNT(DISTINCT MANUFACTURER_NAME) > 1 )
            AND MANUFACTURER_NAME NOT IN (
            SELECT  MANUFACTURER_NAME
            FROM    ( SELECT    M.MANUFACTURER_NAME ,
                                ROW_NUMBER() OVER ( PARTITION BY M.MANUFACTURER_CODE ORDER BY S.ID_COUNT DESC ) AS OrderID
                      FROM      CIF_MANUF_CODE_MAP M
                                INNER JOIN ( SELECT MANUFACTURER_NAME ,
                                                    COUNT(*) AS ID_COUNT
                                             FROM   dbo.CIF_MANUF_CODE_MAP
                                             GROUP BY MANUFACTURER_NAME
                                           ) S ON M.MANUFACTURER_NAME = S.MANUFACTURER_NAME
                    ) IDC
            WHERE   OrderID = 1 )

    SET @maxCode = 0

    SELECT  @maxCode = RIGHT(ISNULL(MAX(MANUFACTURER_CODE), 'NOK0000000'), 7)
    FROM    CIF_MANUF_CODE_MAP
    WHERE   MANUFACTURER_CODE LIKE 'NOK%'
            AND LEN(MANUFACTURER_CODE) = 10
            AND ISNUMERIC(RIGHT(MANUFACTURER_CODE, 7)) = 1 

    UPDATE  dbo.CIF_MANUF_CODE_MAP
    SET     MANUFACTURER_CODE = LEFT('NOK000000', 10 - LEN(ORDER_ID))
            + ORDER_ID
    FROM    dbo.CIF_MANUF_CODE_MAP
            INNER JOIN ( SELECT MANUFACTURER_NAME ,
                                CAST(ROW_NUMBER() OVER ( ORDER BY MANUFACTURER_NAME )
                                + @maxCode AS VARCHAR(7)) ORDER_ID
                         FROM   dbo.CIF_MANUF_CODE_MAP
                         WHERE  MANUFACTURER_CODE = 'NOK0000000'
                       ) orderTable ON MANUFACTURER_CODE = 'NOK0000000'
                                       AND dbo.CIF_MANUF_CODE_MAP.MANUFACTURER_NAME = orderTable.MANUFACTURER_NAME
    OPTION  ( HASH JOIN )



    UPDATE  F
    SET     MANUFACTURER_CODE = MAP.MANUFACTURER_CODE
    FROM    GP_RF_CIF_MANUF F
            INNER JOIN CIF_MANUF_CODE_MAP MAP ON F.MANUFACTURER_NAME = MAP.MANUFACTURER_NAME
                                                 AND F.MANUFACTURER_CODE = 'NOK0000000'

    UPDATE  GP_RF_CIF_MANUF
    SET     PRIO = S.ORDER_ID
    FROM    GP_RF_CIF_MANUF M
            INNER JOIN ( SELECT ID ,
                                ROW_NUMBER() OVER ( PARTITION BY GLOBAL_PART_NUMBER,
                                                    ENTERPRISE_ID,
                                                    MANUFACTURER_NAME ORDER BY ( CASE
                                                              WHEN MANUFACTURER_STATUS IN (
                                                              'Preferred',
                                                              'Release' )
                                                              THEN 1
                                                              WHEN MANUFACTURER_STATUS IN (
                                                              'Alternate',
                                                              'Abbreviated Qualification' )
                                                              THEN 2
                                                              WHEN MANUFACTURER_STATUS = 'Discontinued'
                                                              AND LAST_ORDER_DATE > GETDATE()
                                                              THEN 3
                                                              ELSE 4
                                                              END ), LAST_REFRESH DESC ) ORDER_ID
                         FROM   GP_RF_CIF_MANUF
                       ) S ON M.ID = S.ID

GO

