什么时候触发垃圾回收？
IE6是根据内存分配量d进行的，当环境中存在256个变量，4096个对象，64K的字符串任意一种情况sh的时候就会触发
IE7调整 触发条件动态调整 如果垃圾回收器回收的内存分配量低于占用内存的15% 说明大部分内存不可被回收 说明触发条件太敏感 将条件翻倍
                       如果回收的内存高于85%，说明大部分内存早就该清理 清理后将触发条件置回
GC时，停止响应其他操作 为了安全考虑。100毫秒及以上 对一般应用程序还好 对于js游戏来说，需要优化
GC 优化策略 
 1） 分代回收 区分临时的和持久的  （参考 nodejs)
 2） 增量 GC 每次处理一点 下次再处理一点 (开销 中断较多，上下文切换频繁）
javascript 内存管理
  详细: https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Memory_Management
  概要:
  1)引用计数垃圾收集
      理念:“对象有没有其他对象引用到它”。如果没有引用指向该对象（零引用），对象将被垃圾回收机制回收。
  限制：循环引用
      这个简单的算法有一个限制，就是如果一个对象引用另一个（形成了循环引用），他们可能“不再需要”了，但是他们不会被回收。
  2)标记-清除算法 
      理念:假定设置一个叫做根的对象（在Javascript里，根是全局对象）。定期的，垃圾回收器将从根开始，找所有从根开始引用的对象，
      然后找这些对象引用的对象……从根开始，垃圾回收器将找到所有可以获得的对象和所有不能获得的对象。
  从2012年起，所有现代浏览器都使用了标记-清除垃圾回收算法。所有对JavaScript垃圾回收算法的改进都是基于标记-清除算法的改进
  限制: 那些无法从根对象查询到的对象都将被清除
